// Generated by LiveScript 1.2.0
var app;
app = angular.module('hotel.guest', ['ui.router', 'restangular', 'ui.bootstrap', 'LocalStorageModule', 'ngAnimate', 'hotel.common']);
app.config([
  '$locationProvider', '$stateProvider', '$urlRouterProvider', 'RestangularProvider', '$httpProvider', function($locationProvider, $stateProvider, $urlRouteProvider, Restangular, $httpProvider){
    $locationProvider.html5Mode(true).hashPrefix('!');
    $stateProvider.state('home', {
      url: "/",
      templateUrl: "public/guest/partials/home.html"
    }).state('registration-completed', {
      url: "/registration/completed",
      templateUrl: "public/guest/partials/registration.html"
    }).state('reservations', {
      url: "/reservations",
      templateUrl: "public/guest/partials/profile.html"
    }).state('reservations.new', {
      url: "/new",
      templateUrl: "public/guest/partials/profile.html",
      data: {
        showNewModal: true
      }
    }).state('reservations.new.confirm', {
      url: "/confirm",
      templateUrl: "public/guest/partials/profile.html",
      data: {
        showNewModal: true,
        isConfirm: true
      }
    });
    Restangular.setBaseUrl('rest');
    Restangular.setResponseExtractor(function(response){
      var newResponse;
      newResponse = response;
      if (angular.isArray(response)) {
        angular.forEach(newResponse, function(value, key){
          newResponse[key].originalElement = angular.copy(value);
        });
      } else {
        newResponse.originalElement = angular.copy(response);
      }
      return newResponse;
    });
    $httpProvider.interceptors.push('UnauthorizedInterceptor');
  }
]);
app.controller('HomeCtrl', [
  '$scope', 'Restangular', '$state', '$rootScope', function($scope, Restangular, $state, $rootScope){
    $scope.guest = {
      email: '',
      password: '',
      password2: '',
      phone: '',
      name: ''
    };
    $scope.signup = false;
    $scope.submit = function(){
      if ($scope.signup) {
        $scope.doSignup();
      } else {
        $scope.doLogin();
      }
    };
    $scope.doLogin = function(){
      Restangular.all('users/authenticate').post($scope.guest).then(function(result){
        switch (result.result) {
        case 'INCORRECT_PASSWORD':
          $scope.incorrectPassword = true;
          break;
        case 'USER_NOT_FOUND':
          $scope.signup = true;
          $('#signup').slideDown();
          break;
        case 'OK':
          $rootScope.user = result.user;
          if (result.user.type === 'EMPLOYEE') {
            window.location.href = 'staff';
          }
          if (result.user.type === 'GUEST') {
            $state.go('reservations');
          }
        }
      });
    };
    $scope.signupSuccess = false;
    $scope.doSignup = function(){
      $scope.submitted = true;
      $scope.incorrectPassword = false;
      Restangular.all('guests').post($scope.guest).then(function(errorMap){
        var noError;
        noError = processRemoteValidation($scope.login, errorMap);
        if (noError) {
          $scope.signupSuccess = true;
        }
      });
    };
  }
]);
app.controller('ProfileCtrl', [
  '$scope', 'Restangular', '$state', '$modal', 'localStorageService', 'UserService', function($scope, Restangular, $state, $modal, localStorageService, UserService){
    var ref$;
    $scope.loadReservations = function(){
      $scope.reservations = Restangular.one('guests', 'loggedIn').getList('reservations').$object;
    };
    $scope.openModal = function(){
      var modal;
      modal = $modal.open({
        templateUrl: 'public/guest/partials/new_reservation_modal.html'
      });
      modal.result.then(function(){
        $scope.loadReservations();
        $state.go('reservations');
      }, function(){
        $state.go('reservations');
      });
    };
    UserService.loggedIn().then(function(user){
      return $scope.user = Restangular.copy(user);
    });
    $scope.loadReservations();
    $scope.cancel = function(reservation){
      if (confirm('Biztos benne, hogy lemondja a foglal√°st?')) {
        Restangular.one('reservations', reservation.id).remove();
        $scope.reservations.splice($scope.reservations.indexOf(reservation), 1);
      }
    };
    $scope.saveUserData = function(){
      $scope.user.put().then(function(errorMap){
        if (processRemoteValidation($scope.form, errorMap)) {
          $scope.saveSuccess = true;
        }
      });
    };
    $scope.openNewReservationModal = function(){
      $state.go('reservations.new');
      $scope.openModal();
    };
    $scope.viewReservation = function(reservation){
      var modal;
      $scope.reservation = reservation;
      modal = $modal.open({
        templateUrl: 'public/guest/partials/view_reservation_modal.html',
        controller: 'ViewReservationCtrl',
        scope: $scope
      });
    };
    if ((ref$ = $state.current.data) != null && ref$.showNewModal) {
      $scope.openModal();
    }
  }
]);
app.controller('ViewReservationCtrl', [
  '$scope', 'Restangular', '$state', '$modal', 'localStorageService', function($scope, Restangular, $state, $modal){
    $scope.purchases = Restangular.one('reservations', $scope.reservation.id).getList('purchases').$object;
  }
]);
app.controller('NewReservationCtrl', [
  '$scope', 'Restangular', '$state', '$modal', 'localStorageService', function($scope, Restangular, $state, $modal, localStorageService){
    var ref$;
    $scope.createReservation = function(){
      var reservation;
      reservation = {};
      reservation.startDate = new Date();
      reservation.endDate = new Date();
      reservation.endDate.setDate(new Date().getDate() + 2);
      reservation.smoking = false;
      reservation.numberOfBeds = 2;
      return reservation;
    };
    $scope.findRooms = function(){
      Restangular.all('rooms/available').post($scope.reservation).then(function(results){
        $scope.searchSubmitted = true;
        $scope.searchResults = results;
      });
    };
    $scope.showConfirm = function(room){
      $state.go('reservations.new.confirm');
      $scope.reservation.room = room;
      $scope.confirmReservation = true;
    };
    $scope.hideConfirm = function(){
      $state.go('reservations.new');
      $scope.confirmReservation = false;
    };
    $scope.doConfirm = function(){
      Restangular.all('reservations').post($scope.reservation).then(function(success){
        if (success === "true") {
          $scope.confirmSuccess = true;
        } else {
          $scope.confirmFail = true;
        }
      });
    };
    $scope.isConfirm = function(){
      var ref$;
      return $scope.reservation.room && ((ref$ = $state.current.data) != null ? ref$.isConfirm : void 8);
    };
    $scope.closeModal = function(){
      return $scope.$close();
    };
    $scope.minStartDate = new Date();
    $scope.reservation = (ref$ = localStorageService.get('currentReservation')) != null
      ? ref$
      : $scope.createReservation();
    if (new Date($scope.reservation.startDate) < $scope.minStartDate) {
      $scope.reservation.startDate = $scope.minStartDate;
    }
    $scope.$watch('reservation.startDate', function(startDate){
      $scope.minEndDate = new Date(startDate);
      $scope.minEndDate.setDate($scope.minEndDate.getDate() + 1);
      if (new Date($scope.reservation.endDate) < $scope.minEndDate) {
        return $scope.reservation.endDate = $scope.minEndDate;
      }
    });
    $scope.$watch('reservation', function(reservation){
      $scope.findRooms();
      return localStorageService.add('currentReservation', reservation);
    }, true);
  }
]);